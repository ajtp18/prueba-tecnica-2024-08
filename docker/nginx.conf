worker_processes auto;
error_log /run/nginx/log/error.log;
pid /run/nginx/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /run/nginx/log/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    proxy_cache_path /run/nginx/cache levels=1:2 keys_zone=api_cache:10m max_size=10g inactive=60m use_temp_path=off;

    map $http_x_forwarded_for $real_ip {
        "" $remote_addr;
        ~^(\d+\.\d+\.\d+\.\d+) $1;
    }

    map $request_method $limit_with_bypass {
        GET "";
        default $real_ip$http_user_agent;
    }

    limit_req_zone $limit_with_bypass zone=limit_req:10m rate=10r/s;

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;

        location / {
            # CORS Configuration
            if ($http_origin ~* '^(https?://(localhost(:\d{4})?|.+.onrender.com))$') {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Allow-Credentials' 'true';
            }

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            # Security configurations
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; object-src 'none'; frame-ancestors 'self'; base-uri 'self';" always;
            add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
            
            # Proxy configuration headers
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Request limiting
            limit_req zone=limit_req burst=20 nodelay;
            limit_req_status 429;

            # Proxy caching
            proxy_cache api_cache;
            proxy_cache_valid 200 30s;
            proxy_cache_methods GET;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;

            add_header X-Cache-Status $upstream_cache_status;
            
            proxy_pass http://127.0.0.1:3000;
        }
    }
}
